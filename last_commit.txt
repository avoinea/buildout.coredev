Repository: plone.restapi


Branch: refs/heads/master
Date: 2020-04-01T11:56:42+02:00
Author: Víctor Fernández de Alba (sneridagh) <sneridagh@gmail.com>
Commit: https://github.com/plone/plone.restapi/commit/b3155584f9a93a829e3146699c3f90dcc64ac23f

Fix PATCH on @user properties if the portrait is empty, returns 400 (#752)

* Fix deleting user portrait

* Fix image type in user portrait tests

Co-authored-by: Thomas Buchberger &lt;t.buchberger@4teamwork.ch&gt;

Files changed:
A news/751.bugfix
M src/plone/restapi/services/users/update.py
M src/plone/restapi/tests/http-examples/users_update_portrait.req
M src/plone/restapi/tests/http-examples/users_update_portrait_get.req
M src/plone/restapi/tests/http-examples/users_update_portrait_scale.req
M src/plone/restapi/tests/test_documentation.py
M src/plone/restapi/tests/test_services_users.py

b'diff --git a/news/751.bugfix b/news/751.bugfix\nnew file mode 100644\nindex 00000000..a0d94b7d\n--- /dev/null\n+++ b/news/751.bugfix\n@@ -0,0 +1,2 @@\n+Fix deleting user portrait.\n+[buchi]\ndiff --git a/src/plone/restapi/services/users/update.py b/src/plone/restapi/services/users/update.py\nindex 907f4667..4fa51300 100644\n--- a/src/plone/restapi/services/users/update.py\n+++ b/src/plone/restapi/services/users/update.py\n@@ -1,10 +1,12 @@\n # -*- coding: utf-8 -*-\n from AccessControl import getSecurityManager\n+from Acquisition import aq_inner\n from OFS.Image import Image\n from plone.restapi.services import Service\n from Products.CMFCore.permissions import SetOwnPassword\n from Products.CMFCore.utils import getToolByName\n from Products.CMFPlone.utils import set_own_login_name\n+from Products.PlonePAS.tools.membership import default_portrait\n from Products.PlonePAS.utils import scale_image\n from zope.component import getAdapter\n from zope.component.hooks import getSite\n@@ -70,7 +72,8 @@ def reply(self):\n                 elif key == "username":\n                     set_own_login_name(user, value)\n                 else:\n-                    if key == "portrait" and value.get("data"):\n+\n+                    if key == \'portrait\':\n                         self.set_member_portrait(user, value)\n                     user.setMemberProperties(mapping={key: value})\n \n@@ -98,7 +101,7 @@ def reply(self):\n                 ):\n                     self._change_user_password(user, value)\n                 else:\n-                    if key == "portrait" and value.get("data"):\n+                    if key == "portrait":\n                         self.set_member_portrait(user, value)\n                     user.setMemberProperties(mapping={key: value})\n \n@@ -146,6 +149,14 @@ def set_member_portrait(self, user, portrait):\n         portal = getSite()\n         portal_membership = getToolByName(portal, "portal_membership")\n         safe_id = portal_membership._getSafeMemberId(user.getId())\n+\n+        if portrait is None:\n+            previous = portal_membership.getPersonalPortrait(safe_id)\n+            default_portrait_value = getattr(portal, default_portrait, None)\n+            if aq_inner(previous) != aq_inner(default_portrait_value):\n+                portal_membership.deletePersonalPortrait(str(safe_id))\n+            return\n+\n         content_type = "application/octet-stream"\n         filename = None\n \n@@ -156,8 +167,6 @@ def set_member_portrait(self, user, portrait):\n             data = data.encode("utf-8")\n         if "encoding" in portrait:\n             data = codecs.decode(data, portrait["encoding"])\n-        if isinstance(data, six.text_type):\n-            data = data.encode("utf-8")\n \n         if portrait.get("scale", False):\n             # Only scale if the scale (default Plone behavior) boolean is set\ndiff --git a/src/plone/restapi/tests/http-examples/users_update_portrait.req b/src/plone/restapi/tests/http-examples/users_update_portrait.req\nindex ffbf93b9..1e121b51 100644\n--- a/src/plone/restapi/tests/http-examples/users_update_portrait.req\n+++ b/src/plone/restapi/tests/http-examples/users_update_portrait.req\n@@ -5,9 +5,9 @@ Content-Type: application/json\n \n {\n     "portrait": {\n-        "content-type": "image/png",\n+        "content-type": "image/gif",\n         "data": "R0lGODlhAQABAIAAAP///wAAACwAAAAAAQABAAACAkQBADs=",\n         "encoding": "base64",\n-        "filename": "image.png"\n+        "filename": "image.gif"\n     }\n }\n\\ No newline at end of file\ndiff --git a/src/plone/restapi/tests/http-examples/users_update_portrait_get.req b/src/plone/restapi/tests/http-examples/users_update_portrait_get.req\nindex 244906ea..ff87c069 100644\n--- a/src/plone/restapi/tests/http-examples/users_update_portrait_get.req\n+++ b/src/plone/restapi/tests/http-examples/users_update_portrait_get.req\n@@ -5,9 +5,9 @@ Content-Type: application/json\n \n {\n     "portrait": {\n-        "content-type": "image/png",\n+        "content-type": "image/gif",\n         "data": "R0lGODlhAQABAIAAAP///wAAACwAAAAAAQABAAACAkQBADs=",\n         "encoding": "base64",\n-        "filename": "image.png"\n+        "filename": "image.gif"\n     }\n }\n\\ No newline at end of file\ndiff --git a/src/plone/restapi/tests/http-examples/users_update_portrait_scale.req b/src/plone/restapi/tests/http-examples/users_update_portrait_scale.req\nindex 9781e060..d214c298 100644\n--- a/src/plone/restapi/tests/http-examples/users_update_portrait_scale.req\n+++ b/src/plone/restapi/tests/http-examples/users_update_portrait_scale.req\n@@ -5,10 +5,10 @@ Content-Type: application/json\n \n {\n     "portrait": {\n-        "content-type": "image/png",\n+        "content-type": "image/gif",\n         "data": "R0lGODlhAQABAIAAAP///wAAACwAAAAAAQABAAACAkQBADs=",\n         "encoding": "base64",\n-        "filename": "image.png",\n+        "filename": "image.gif",\n         "scale": true\n     }\n }\n\\ No newline at end of file\ndiff --git a/src/plone/restapi/tests/test_documentation.py b/src/plone/restapi/tests/test_documentation.py\nindex eea93186..835bca13 100644\n--- a/src/plone/restapi/tests/test_documentation.py\n+++ b/src/plone/restapi/tests/test_documentation.py\n@@ -786,10 +786,10 @@ def test_documentation_users_update(self):\n     def test_documentation_users_update_portrait(self):\n         payload = {\n             "portrait": {\n-                "filename": "image.png",\n+                "filename": "image.gif",\n                 "encoding": "base64",\n                 "data": "R0lGODlhAQABAIAAAP///wAAACwAAAAAAQABAAACAkQBADs=",\n-                "content-type": "image/png",\n+                "content-type": "image/gif",\n             }\n         }\n         api.user.create(email="noam.chomsky@example.com", username="noam")\n@@ -805,10 +805,10 @@ def test_documentation_users_update_portrait(self):\n     def test_documentation_users_update_portrait_with_scale(self):\n         payload = {\n             "portrait": {\n-                "filename": "image.png",\n+                "filename": "image.gif",\n                 "encoding": "base64",\n                 "data": "R0lGODlhAQABAIAAAP///wAAACwAAAAAAQABAAACAkQBADs=",\n-                "content-type": "image/png",\n+                "content-type": "image/gif",\n                 "scale": True,\n             }\n         }\ndiff --git a/src/plone/restapi/tests/test_services_users.py b/src/plone/restapi/tests/test_services_users.py\nindex 8e8fa051..867369d7 100644\n--- a/src/plone/restapi/tests/test_services_users.py\n+++ b/src/plone/restapi/tests/test_services_users.py\n@@ -439,10 +439,10 @@ def test_update_user_password(self):\n     def test_update_portrait(self):\n         payload = {\n             "portrait": {\n-                "filename": "image.png",\n+                "filename": "image.gif",\n                 "encoding": "base64",\n                 "data": u"R0lGODlhAQABAIAAAP///wAAACwAAAAAAQABAAACAkQBADs=",\n-                "content-type": "image/png",\n+                "content-type": "image/gif",\n             }\n         }\n         self.api_session.auth = ("noam", "password")\n@@ -459,10 +459,10 @@ def test_update_portrait(self):\n     def test_update_portrait_with_default_plone_scaling(self):\n         payload = {\n             "portrait": {\n-                "filename": "image.png",\n+                "filename": "image.gif",\n                 "encoding": "base64",\n                 "data": u"R0lGODlhAQABAIAAAP///wAAACwAAAAAAQABAAACAkQBADs=",\n-                "content-type": "image/png",\n+                "content-type": "image/gif",\n                 "scale": True,\n             }\n         }\n@@ -480,10 +480,10 @@ def test_update_portrait_with_default_plone_scaling(self):\n     def test_update_portrait_by_manager(self):\n         payload = {\n             "portrait": {\n-                "filename": "image.png",\n+                "filename": "image.gif",\n                 "encoding": "base64",\n                 "data": u"R0lGODlhAQABAIAAAP///wAAACwAAAAAAQABAAACAkQBADs=",\n-                "content-type": "image/png",\n+                "content-type": "image/gif",\n             }\n         }\n         response = self.api_session.patch("/@users/noam", json=payload)\n@@ -496,6 +496,33 @@ def test_update_portrait_by_manager(self):\n             user.get("portrait").endswith("plone/portal_memberdata/portraits/noam")\n         )\n \n+    def test_delete_portrait(self):\n+        payload = {\n+            "portrait": None,\n+        }\n+        self.api_session.auth = ("noam", "password")\n+        response = self.api_session.patch("/@users/noam", json=payload)\n+\n+        self.assertEqual(response.status_code, 204)\n+        transaction.commit()\n+\n+        user = self.api_session.get("/@users/noam").json()\n+\n+        self.assertTrue(user.get("portrait") is None)\n+\n+    def test_delete_portrait_by_manager(self):\n+        payload = {\n+            "portrait": None,\n+        }\n+        response = self.api_session.patch("/@users/noam", json=payload)\n+\n+        self.assertEqual(response.status_code, 204)\n+        transaction.commit()\n+\n+        user = self.api_session.get("/@users/noam").json()\n+\n+        self.assertTrue(user.get("portrait") is None)\n+\n     def test_anonymous_user_can_not_update_existing_user(self):\n         payload = {\n             "fullname": "Noam A. Chomsky",\n'

