Repository: plone.releaser


Branch: refs/heads/master
Date: 2020-03-04T14:36:27+01:00
Author: Maurits van Rees (mauritsvanrees) <maurits@vanrees.org>
Commit: https://github.com/plone/plone.releaser/commit/ec9ad14e31ef8633f078c29e4bc443334c3f1050

Fixed adding a package to checkouts.cfg.

Fixes https://github.com/plone/plone.releaser/issues/30
I finished a run on coredev 5.1 with this, and now it works.

Files changed:
A news/30.bugfix
M plone/releaser/buildout.py

b'diff --git a/news/30.bugfix b/news/30.bugfix\nnew file mode 100644\nindex 0000000..d5a6bae\n--- /dev/null\n+++ b/news/30.bugfix\n@@ -0,0 +1 @@\n+Fixed adding a package to checkouts.cfg.  [maurits]\ndiff --git a/plone/releaser/buildout.py b/plone/releaser/buildout.py\nindex df0c385..fda731b 100644\n--- a/plone/releaser/buildout.py\n+++ b/plone/releaser/buildout.py\n@@ -152,31 +152,28 @@ def __setitem__(self, package_name, enabled=True):\n         with open(path, "r") as f:\n             checkoutstxt = f.read()\n         with open(path, "w") as f:\n+            if not checkoutstxt.endswith("\\n"):\n+                # Make sure the file ends with a newline.\n+                checkoutstxt += "\\n"\n+            # Look for the package name on a line of its own,\n+            # with likely whitespace in front.\n+            reg = re.compile(r"^[\\s]*{0}\\n".format(package_name), re.MULTILINE)\n             if enabled:\n-                fixes_text = "# test-only fixes:"\n-                reg = re.compile("^[\\s]*{0}\\n".format(fixes_text), re.MULTILINE)\n-                newCheckoutsTxt = reg.sub(\n-                    "    {0}\\n{1}\\n".format(package_name, fixes_text), checkoutstxt\n-                )\n+                # We used to look for "# test-only fixes:" here,\n+                # and place the checkout before it.\n+                # But this text is no longer in any current checkouts.cfg.\n+                if not reg.match(checkoutstxt):\n+                    # It is indeed not yet in the checkouts.\n+                    newCheckoutsTxt = checkoutstxt + "    {0}\\n".format(package_name)\n             else:\n-                reg = re.compile("^[\\s]*{0}\\n".format(package_name), re.MULTILINE)\n+                # Remove the package name\n                 newCheckoutsTxt = reg.sub("", checkoutstxt)\n             f.write(newCheckoutsTxt)\n \n     def __delitem__(self, package_name):\n         return self.__setitem__(package_name, False)\n \n-    # def setAutoCheckouts(self, checkouts_list):\n-    #     config = ConfigParser(interpolation=ExtendedInterpolation())\n-    #     with open(self.file_location) as f:\n-    #         config.read_file(f)\n-    #     checkouts = \'\\n\'.join(checkouts_list)\n-    #     config.set(\'buildout\', \'auto-checkout\', checkouts)\n-    #     with open(self.file_location, \'w\') as f:\n-    #         config.write(f)\n-\n     def add(self, package_name):\n-        # TODO: Handle test-fix-only as well\n         return self.__setitem__(package_name, True)\n \n     def remove(self, package_name):\n'

Repository: plone.releaser


Branch: refs/heads/master
Date: 2020-03-04T16:09:43+01:00
Author: Maurits van Rees (mauritsvanrees) <m.van.rees@zestsoftware.nl>
Commit: https://github.com/plone/plone.releaser/commit/7a4cac20fcead26874cea756aa57dd5b2fb8be60

Merge pull request #31 from plone/maurits/issue-30-checkouts

Fixed adding a package to checkouts.cfg.

Files changed:
A news/30.bugfix
M plone/releaser/buildout.py

b'diff --git a/news/30.bugfix b/news/30.bugfix\nnew file mode 100644\nindex 0000000..d5a6bae\n--- /dev/null\n+++ b/news/30.bugfix\n@@ -0,0 +1 @@\n+Fixed adding a package to checkouts.cfg.  [maurits]\ndiff --git a/plone/releaser/buildout.py b/plone/releaser/buildout.py\nindex df0c385..fda731b 100644\n--- a/plone/releaser/buildout.py\n+++ b/plone/releaser/buildout.py\n@@ -152,31 +152,28 @@ def __setitem__(self, package_name, enabled=True):\n         with open(path, "r") as f:\n             checkoutstxt = f.read()\n         with open(path, "w") as f:\n+            if not checkoutstxt.endswith("\\n"):\n+                # Make sure the file ends with a newline.\n+                checkoutstxt += "\\n"\n+            # Look for the package name on a line of its own,\n+            # with likely whitespace in front.\n+            reg = re.compile(r"^[\\s]*{0}\\n".format(package_name), re.MULTILINE)\n             if enabled:\n-                fixes_text = "# test-only fixes:"\n-                reg = re.compile("^[\\s]*{0}\\n".format(fixes_text), re.MULTILINE)\n-                newCheckoutsTxt = reg.sub(\n-                    "    {0}\\n{1}\\n".format(package_name, fixes_text), checkoutstxt\n-                )\n+                # We used to look for "# test-only fixes:" here,\n+                # and place the checkout before it.\n+                # But this text is no longer in any current checkouts.cfg.\n+                if not reg.match(checkoutstxt):\n+                    # It is indeed not yet in the checkouts.\n+                    newCheckoutsTxt = checkoutstxt + "    {0}\\n".format(package_name)\n             else:\n-                reg = re.compile("^[\\s]*{0}\\n".format(package_name), re.MULTILINE)\n+                # Remove the package name\n                 newCheckoutsTxt = reg.sub("", checkoutstxt)\n             f.write(newCheckoutsTxt)\n \n     def __delitem__(self, package_name):\n         return self.__setitem__(package_name, False)\n \n-    # def setAutoCheckouts(self, checkouts_list):\n-    #     config = ConfigParser(interpolation=ExtendedInterpolation())\n-    #     with open(self.file_location) as f:\n-    #         config.read_file(f)\n-    #     checkouts = \'\\n\'.join(checkouts_list)\n-    #     config.set(\'buildout\', \'auto-checkout\', checkouts)\n-    #     with open(self.file_location, \'w\') as f:\n-    #         config.write(f)\n-\n     def add(self, package_name):\n-        # TODO: Handle test-fix-only as well\n         return self.__setitem__(package_name, True)\n \n     def remove(self, package_name):\n'

