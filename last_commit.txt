Repository: plone.app.redirector


Branch: refs/heads/master
Date: 2020-02-14T18:57:04+01:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.app.redirector/commit/22399a60679349a5dda17e567c9a55c53eef0e6c

Fix http status of the response

The http status of the response is changed from 301 (Moved Permanently)
to 302 (Found) for GET requests and to 307 (Temporary Redirect) for
other request methods because nothing prevents the URL to be reused in
the future.

This was inspired by https://github.com/plone/plone.rest/pull/76

Refs #8

Files changed:
A news/8.feature
M plone/app/redirector/browser.py
M plone/app/redirector/tests/test_view.py

b'diff --git a/news/8.feature b/news/8.feature\nnew file mode 100644\nindex 0000000..014a205\n--- /dev/null\n+++ b/news/8.feature\n@@ -0,0 +1 @@\n+The http status of the response is changed from 301 (Moved Permanently) to 302 (Found) for GET requests and to 307 (Temporary Redirect) for other request methods because nothing prevents the URL to be reused in the future. [ale-rt]\ndiff --git a/plone/app/redirector/browser.py b/plone/app/redirector/browser.py\nindex 97af8c3..bf782ec 100644\n--- a/plone/app/redirector/browser.py\n+++ b/plone/app/redirector/browser.py\n@@ -84,7 +84,17 @@ def attempt_redirect(self):\n         # some analytics programs might use this info to track\n         if query_string:\n             url += "?" + query_string\n-        self.request.response.redirect(url, status=301, lock=1)\n+\n+        # Answer GET requests with 302 (Found). Every other method will be answered\n+        # with 307 (Temporary Redirect), which instructs the client to NOT\n+        # switch the method (if the original request was a POST, it should\n+        # re-POST to the new URL from the Location header).\n+        if self.request.method.upper() == "GET":\n+            status = 302\n+        else:\n+            status = 307\n+\n+        self.request.response.redirect(url, status=status, lock=1)\n         return True\n \n     def find_redirect_if_view(self, old_path_elements, storage):\ndiff --git a/plone/app/redirector/tests/test_view.py b/plone/app/redirector/tests/test_view.py\nindex e6326c0..295c8be 100644\n--- a/plone/app/redirector/tests/test_view.py\n+++ b/plone/app/redirector/tests/test_view.py\n@@ -38,7 +38,7 @@ def test_attempt_redirect_with_known_url(self):\n         self.storage.add(fp + \'/foo\', fp + \'/bar\')\n         view = self.view(self.portal, fu + \'/foo\')\n         self.assertEqual(True, view.attempt_redirect())\n-        self.assertEqual(301, self.request.response.getStatus())\n+        self.assertEqual(302, self.request.response.getStatus())\n         self.assertEqual(fu + \'/bar\',\n             self.request.response.getHeader(\'location\'))\n \n@@ -48,7 +48,7 @@ def test_attempt_redirect_with_known_url_and_template(self):\n         self.storage.add(fp + \'/foo\', fp + \'/bar\')\n         view = self.view(self.portal, fu + \'/foo/view\')\n         self.assertEqual(True, view.attempt_redirect())\n-        self.assertEqual(301, self.request.response.getStatus())\n+        self.assertEqual(302, self.request.response.getStatus())\n         self.assertEqual(fu + \'/bar/view\',\n             self.request.response.getHeader(\'location\'))\n \n@@ -58,7 +58,7 @@ def test_attempt_redirect_with_known_url_and_view_with_part(self):\n         self.storage.add(fp + \'/foo\', fp + \'/bar\')\n         view = self.view(self.portal, fu + \'/foo/@@view/part\')\n         self.assertEqual(True, view.attempt_redirect())\n-        self.assertEqual(301, self.request.response.getStatus())\n+        self.assertEqual(302, self.request.response.getStatus())\n         self.assertEqual(fu + \'/bar/@@view/part\',\n             self.request.response.getHeader(\'location\'))\n \n@@ -66,13 +66,13 @@ def test_attempt_redirect_with_unknown_url(self):\n         fu = self.folder.absolute_url()\n         view = self.view(self.portal, fu + \'/foo\')\n         self.assertEqual(False, view.attempt_redirect())\n-        self.assertNotEqual(301, self.request.response.getStatus())\n+        self.assertNotEqual(302, self.request.response.getStatus())\n \n     def test_attempt_redirect_with_unknown_url_with_illegal_characters(self):\n         fu = self.folder.absolute_url()\n         view = self.view(self.portal, fu + \'+L\xc3\x83\xc2\xa4nder\')\n         self.assertEqual(False, view.attempt_redirect())\n-        self.assertNotEqual(301, self.request.response.getStatus())\n+        self.assertNotEqual(302, self.request.response.getStatus())\n \n     def test_attempt_redirect_with_quoted_url(self):\n         fp = \'/\'.join(self.folder.getPhysicalPath())\n@@ -80,7 +80,7 @@ def test_attempt_redirect_with_quoted_url(self):\n         self.storage.add(fp + \'/foo\', fp + \'/bar\')\n         view = self.view(self.portal, fu + \'/foo/baz%20quux\')\n         self.assertEqual(True, view.attempt_redirect())\n-        self.assertEqual(301, self.request.response.getStatus())\n+        self.assertEqual(302, self.request.response.getStatus())\n         self.assertEqual(fu + \'/bar/baz%20quux\',\n             self.request.response.getHeader(\'location\'))\n \n@@ -90,7 +90,7 @@ def test_attempt_redirect_with_query_string(self):\n         self.storage.add(fp + \'/foo?blah=blah\', fp + \'/bar\')\n         view = self.view(self.portal, fu + \'/foo\', \'blah=blah\')\n         self.assertEqual(True, view.attempt_redirect())\n-        self.assertEqual(301, self.request.response.getStatus())\n+        self.assertEqual(302, self.request.response.getStatus())\n         self.assertEqual(fu + \'/bar\',\n             self.request.response.getHeader(\'location\'))\n \n@@ -100,7 +100,7 @@ def test_attempt_redirect_appending_query_string(self):\n         self.storage.add(fp + \'/foo\', fp + \'/bar\')\n         view = self.view(self.portal, fu + \'/foo\', \'blah=blah\')\n         self.assertEqual(True, view.attempt_redirect())\n-        self.assertEqual(301, self.request.response.getStatus())\n+        self.assertEqual(302, self.request.response.getStatus())\n         self.assertEqual(fu + \'/bar?blah=blah\',\n             self.request.response.getHeader(\'location\'))\n \n@@ -111,7 +111,7 @@ def test_attempt_redirect_with_external_url(self):\n                          \'http://otherhost\' + fp + \'/bar%20qux corge\')\n         view = self.view(self.portal, fu + \'/foo\')\n         self.assertEqual(True, view.attempt_redirect())\n-        self.assertEqual(301, self.request.response.getStatus())\n+        self.assertEqual(302, self.request.response.getStatus())\n         self.assertEqual(\'http://otherhost\' + fp + \'/bar%20qux%20corge\',\n             self.request.response.getHeader(\'location\'))\n \n'

Repository: plone.app.redirector


Branch: refs/heads/master
Date: 2020-02-26T23:04:48+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.app.redirector/commit/2f6da2972385650800cd7a3b2c4db9bc224a81c9

Merge pull request #22 from plone/8-http-status

Fix http status of the response

Files changed:
A news/8.feature
M plone/app/redirector/browser.py
M plone/app/redirector/tests/test_view.py

b'diff --git a/news/8.feature b/news/8.feature\nnew file mode 100644\nindex 0000000..014a205\n--- /dev/null\n+++ b/news/8.feature\n@@ -0,0 +1 @@\n+The http status of the response is changed from 301 (Moved Permanently) to 302 (Found) for GET requests and to 307 (Temporary Redirect) for other request methods because nothing prevents the URL to be reused in the future. [ale-rt]\ndiff --git a/plone/app/redirector/browser.py b/plone/app/redirector/browser.py\nindex 97af8c3..bf782ec 100644\n--- a/plone/app/redirector/browser.py\n+++ b/plone/app/redirector/browser.py\n@@ -84,7 +84,17 @@ def attempt_redirect(self):\n         # some analytics programs might use this info to track\n         if query_string:\n             url += "?" + query_string\n-        self.request.response.redirect(url, status=301, lock=1)\n+\n+        # Answer GET requests with 302 (Found). Every other method will be answered\n+        # with 307 (Temporary Redirect), which instructs the client to NOT\n+        # switch the method (if the original request was a POST, it should\n+        # re-POST to the new URL from the Location header).\n+        if self.request.method.upper() == "GET":\n+            status = 302\n+        else:\n+            status = 307\n+\n+        self.request.response.redirect(url, status=status, lock=1)\n         return True\n \n     def find_redirect_if_view(self, old_path_elements, storage):\ndiff --git a/plone/app/redirector/tests/test_view.py b/plone/app/redirector/tests/test_view.py\nindex e6326c0..295c8be 100644\n--- a/plone/app/redirector/tests/test_view.py\n+++ b/plone/app/redirector/tests/test_view.py\n@@ -38,7 +38,7 @@ def test_attempt_redirect_with_known_url(self):\n         self.storage.add(fp + \'/foo\', fp + \'/bar\')\n         view = self.view(self.portal, fu + \'/foo\')\n         self.assertEqual(True, view.attempt_redirect())\n-        self.assertEqual(301, self.request.response.getStatus())\n+        self.assertEqual(302, self.request.response.getStatus())\n         self.assertEqual(fu + \'/bar\',\n             self.request.response.getHeader(\'location\'))\n \n@@ -48,7 +48,7 @@ def test_attempt_redirect_with_known_url_and_template(self):\n         self.storage.add(fp + \'/foo\', fp + \'/bar\')\n         view = self.view(self.portal, fu + \'/foo/view\')\n         self.assertEqual(True, view.attempt_redirect())\n-        self.assertEqual(301, self.request.response.getStatus())\n+        self.assertEqual(302, self.request.response.getStatus())\n         self.assertEqual(fu + \'/bar/view\',\n             self.request.response.getHeader(\'location\'))\n \n@@ -58,7 +58,7 @@ def test_attempt_redirect_with_known_url_and_view_with_part(self):\n         self.storage.add(fp + \'/foo\', fp + \'/bar\')\n         view = self.view(self.portal, fu + \'/foo/@@view/part\')\n         self.assertEqual(True, view.attempt_redirect())\n-        self.assertEqual(301, self.request.response.getStatus())\n+        self.assertEqual(302, self.request.response.getStatus())\n         self.assertEqual(fu + \'/bar/@@view/part\',\n             self.request.response.getHeader(\'location\'))\n \n@@ -66,13 +66,13 @@ def test_attempt_redirect_with_unknown_url(self):\n         fu = self.folder.absolute_url()\n         view = self.view(self.portal, fu + \'/foo\')\n         self.assertEqual(False, view.attempt_redirect())\n-        self.assertNotEqual(301, self.request.response.getStatus())\n+        self.assertNotEqual(302, self.request.response.getStatus())\n \n     def test_attempt_redirect_with_unknown_url_with_illegal_characters(self):\n         fu = self.folder.absolute_url()\n         view = self.view(self.portal, fu + \'+L\xc3\x83\xc2\xa4nder\')\n         self.assertEqual(False, view.attempt_redirect())\n-        self.assertNotEqual(301, self.request.response.getStatus())\n+        self.assertNotEqual(302, self.request.response.getStatus())\n \n     def test_attempt_redirect_with_quoted_url(self):\n         fp = \'/\'.join(self.folder.getPhysicalPath())\n@@ -80,7 +80,7 @@ def test_attempt_redirect_with_quoted_url(self):\n         self.storage.add(fp + \'/foo\', fp + \'/bar\')\n         view = self.view(self.portal, fu + \'/foo/baz%20quux\')\n         self.assertEqual(True, view.attempt_redirect())\n-        self.assertEqual(301, self.request.response.getStatus())\n+        self.assertEqual(302, self.request.response.getStatus())\n         self.assertEqual(fu + \'/bar/baz%20quux\',\n             self.request.response.getHeader(\'location\'))\n \n@@ -90,7 +90,7 @@ def test_attempt_redirect_with_query_string(self):\n         self.storage.add(fp + \'/foo?blah=blah\', fp + \'/bar\')\n         view = self.view(self.portal, fu + \'/foo\', \'blah=blah\')\n         self.assertEqual(True, view.attempt_redirect())\n-        self.assertEqual(301, self.request.response.getStatus())\n+        self.assertEqual(302, self.request.response.getStatus())\n         self.assertEqual(fu + \'/bar\',\n             self.request.response.getHeader(\'location\'))\n \n@@ -100,7 +100,7 @@ def test_attempt_redirect_appending_query_string(self):\n         self.storage.add(fp + \'/foo\', fp + \'/bar\')\n         view = self.view(self.portal, fu + \'/foo\', \'blah=blah\')\n         self.assertEqual(True, view.attempt_redirect())\n-        self.assertEqual(301, self.request.response.getStatus())\n+        self.assertEqual(302, self.request.response.getStatus())\n         self.assertEqual(fu + \'/bar?blah=blah\',\n             self.request.response.getHeader(\'location\'))\n \n@@ -111,7 +111,7 @@ def test_attempt_redirect_with_external_url(self):\n                          \'http://otherhost\' + fp + \'/bar%20qux corge\')\n         view = self.view(self.portal, fu + \'/foo\')\n         self.assertEqual(True, view.attempt_redirect())\n-        self.assertEqual(301, self.request.response.getStatus())\n+        self.assertEqual(302, self.request.response.getStatus())\n         self.assertEqual(\'http://otherhost\' + fp + \'/bar%20qux%20corge\',\n             self.request.response.getHeader(\'location\'))\n \n'

