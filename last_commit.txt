Repository: plone.restapi


Branch: refs/heads/master
Date: 2020-04-01T14:11:24+02:00
Author: Víctor Fernández de Alba (sneridagh) <sneridagh@gmail.com>
Commit: https://github.com/plone/plone.restapi/commit/9ee79a65ed67dbf657caf07029a44faec93766ef

Fix for the use case while updating user properties in the @user endpoint, and the portrait is already previously set but the request includes the (previously) serialized value as a string because the user are not updating it (#897)

Files changed:
A news/896.bugfix
M src/plone/restapi/services/users/update.py
M src/plone/restapi/tests/test_services_users.py

b'diff --git a/news/896.bugfix b/news/896.bugfix\nnew file mode 100644\nindex 00000000..68d5dc01\n--- /dev/null\n+++ b/news/896.bugfix\n@@ -0,0 +1,4 @@\n+Fix for the use case while updating user properties in the @user endpoint, and the\n+portrait is already previously set but the request includes the (previously) serialized\n+value as a string because the user are not updating it\n+[sneridagh]\ndiff --git a/src/plone/restapi/services/users/update.py b/src/plone/restapi/services/users/update.py\nindex 4fa51300..815909b9 100644\n--- a/src/plone/restapi/services/users/update.py\n+++ b/src/plone/restapi/services/users/update.py\n@@ -72,8 +72,10 @@ def reply(self):\n                 elif key == "username":\n                     set_own_login_name(user, value)\n                 else:\n-\n-                    if key == \'portrait\':\n+                    # If the portrait is already set but has not been changed change it,\n+                    # then the serialized value comes again in the request as a string,\n+                    # no data on it, then we should not set it since it will fail\n+                    if key == "portrait" and isinstance(value, dict):\n                         self.set_member_portrait(user, value)\n                     user.setMemberProperties(mapping={key: value})\n \n@@ -101,7 +103,10 @@ def reply(self):\n                 ):\n                     self._change_user_password(user, value)\n                 else:\n-                    if key == "portrait":\n+                    # If the portrait is already set but has not been changed change it,\n+                    # then the serialized value comes again in the request as a string,\n+                    # no data on it, then we should not set it since it will fail\n+                    if key == "portrait" and isinstance(value, dict):\n                         self.set_member_portrait(user, value)\n                     user.setMemberProperties(mapping={key: value})\n \ndiff --git a/src/plone/restapi/tests/test_services_users.py b/src/plone/restapi/tests/test_services_users.py\nindex 867369d7..85cdc2ee 100644\n--- a/src/plone/restapi/tests/test_services_users.py\n+++ b/src/plone/restapi/tests/test_services_users.py\n@@ -523,6 +523,38 @@ def test_delete_portrait_by_manager(self):\n \n         self.assertTrue(user.get("portrait") is None)\n \n+    def test_update_user_with_portrait_set_without_updating_portrait(self):\n+        payload = {\n+            "portrait": {\n+                "filename": "image.gif",\n+                "encoding": "base64",\n+                "data": u"R0lGODlhAQABAIAAAP///wAAACwAAAAAAQABAAACAkQBADs=",\n+                "content-type": "image/gif",\n+            }\n+        }\n+        self.api_session.auth = ("noam", "password")\n+        response = self.api_session.patch("/@users/noam", json=payload)\n+\n+        self.assertEqual(response.status_code, 204)\n+        transaction.commit()\n+\n+        payload = {\n+            "fullname": "Noam A. Chomsky",\n+            "username": "noam",\n+            "email": "avram.chomsky@plone.org",\n+            "portrait": "http://localhost:55001/plone/portal_memberdata/portraits/noam",\n+        }\n+        self.api_session.auth = ("noam", "password")\n+        response = self.api_session.patch("/@users/noam", json=payload)\n+\n+        self.assertEqual(response.status_code, 204)\n+        transaction.commit()\n+\n+        user = self.api_session.get("/@users/noam").json()\n+        self.assertTrue(\n+            user.get("portrait").endswith("plone/portal_memberdata/portraits/noam")\n+        )\n+\n     def test_anonymous_user_can_not_update_existing_user(self):\n         payload = {\n             "fullname": "Noam A. Chomsky",\n'

