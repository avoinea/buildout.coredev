Repository: plone.app.z3cform


Branch: refs/heads/master
Date: 2020-03-21T10:28:59+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.z3cform/commit/d0ba287fe868a673f18f5f1f04fc0fb3b47cbf54

Add template to display the related items from RelationChoice and RelationList fields instead of only uuids

Files changed:
A plone/app/z3cform/templates/relateditems_display.pt
M plone/app/z3cform/configure.zcml
M plone/app/z3cform/widget.py

b'diff --git a/plone/app/z3cform/configure.zcml b/plone/app/z3cform/configure.zcml\nindex 63d81da..7e2d547 100644\n--- a/plone/app/z3cform/configure.zcml\n+++ b/plone/app/z3cform/configure.zcml\n@@ -150,6 +150,13 @@\n       template="templates/link_input.pt"\n       />\n \n+  <z3c:widgetTemplate\n+      mode="display"\n+      widget=".interfaces.IRelatedItemsWidget"\n+      layer=".interfaces.IPloneFormLayer"\n+      template="templates/relateditems_display.pt"\n+      />\n+\n   <browser:page\n       name="z3cform_validate_field"\n       for="*"\ndiff --git a/plone/app/z3cform/templates/relateditems_display.pt b/plone/app/z3cform/templates/relateditems_display.pt\nnew file mode 100644\nindex 0000000..23ee643\n--- /dev/null\n+++ b/plone/app/z3cform/templates/relateditems_display.pt\n@@ -0,0 +1,41 @@\n+<span id="form-widgets-fieldname"\n+      class="relateditems-widget textline-field"\n+      i18n:domain="plone"\n+      tal:define="plone_view nocall:context/@@plone;\n+                  normalizeString python:plone_view.normalizeString;\n+                  items python: view.items();\n+                  "\n+      tal:condition="items"\n+      tal:attributes="id python:\'form-widgets-{}\'.format(view.__name__);\n+                      class python: \'relateditems-widget {}-field\'.format(normalizeString(view.field.__class__.__name__));\n+                      ">\n+    <div>\n+        <ul>\n+          <li tal:repeat="item items">\n+            <span tal:define="item_type           python:item.portal_type;\n+                              item_type_class     python:item.ContentTypeClass();\n+                              item_wf_state_class python:item.ReviewStateClass();\n+                              appendViewAction    python:item.appendViewAction();\n+                              item_url            python:item.getURL();\n+                              item_url            python:item_url+\'/view\' if appendViewAction else item_url;"\n+                  tal:attributes="title item_type">\n+\n+              <a tal:attributes="href item_url">\n+                <img class="mime-icon"\n+                     tal:condition="python:item_type ==\'File\'"\n+                     tal:attributes="src python:item.MimeTypeIcon();">\n+\n+                <span tal:attributes="class string:$item_type_class $item_wf_state_class url;"\n+                      tal:content="python:item.Title()">\n+                    Title\n+                </span>\n+                <span class="discreet"\n+                      tal:content="python:item.Description()">\n+                    Description\n+                </span>\n+              </a>\n+            </span>\n+          </li>\n+        </ul>\n+    </div>\n+</span>\ndiff --git a/plone/app/z3cform/widget.py b/plone/app/z3cform/widget.py\nindex 7d9fd48..43753f9 100644\n--- a/plone/app/z3cform/widget.py\n+++ b/plone/app/z3cform/widget.py\n@@ -3,6 +3,7 @@\n from Acquisition import ImplicitAcquisitionWrapper\n from lxml import etree\n from OFS.interfaces import ISimpleItem\n+from plone.app.contentlisting.interfaces import IContentListing\n from plone.app.event.base import first_weekday\n from plone.app.textfield.value import RichTextValue\n from plone.app.textfield.widget import RichTextWidget as patext_RichTextWidget\n@@ -619,6 +620,34 @@ def _base_args(self):\n \n         return args\n \n+    def items(self):\n+        """Return item for the widget values for the display template\n+\n+        Query the catalog for the widget-value (uuids) to only display items\n+        that the user is allowed to see. Accessing the value with e.g.\n+        getattr(self.context, self.__name__) would yield the items unfiltered.\n+        To keep the order intact query each uuid individually.\n+        Uses IContentListing for easy access to MimeTypeIcon and more.\n+        """\n+        results = []\n+        if not self.value:\n+            return results\n+        separator = getattr(self, \'separator\', \';\')\n+        uuids = self.value.split(separator)\n+        if not isinstance(uuids, (list, tuple, set)):\n+            uuids = [uuids]\n+\n+        try:\n+            catalog = getToolByName(self.context, \'portal_catalog\')\n+        except AttributeError:\n+            catalog = getToolByName(getSite(), \'portal_catalog\')\n+\n+        for uuid in uuids:\n+            brains = catalog(UID=uuid)\n+            if brains:\n+                results.append(brains[0])\n+        return IContentListing(results)\n+\n \n @implementer_only(IQueryStringWidget)\n class QueryStringWidget(BaseWidget, z3cform_TextWidget):\n'

Repository: plone.app.z3cform


Branch: refs/heads/master
Date: 2020-03-21T11:13:01+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.z3cform/commit/751a4d5d3857990a1ac4b073102e5127714afcc6

add changelog

Files changed:
A news/111.feature

b'diff --git a/news/111.feature b/news/111.feature\nnew file mode 100644\nindex 0000000..da56c5f\n--- /dev/null\n+++ b/news/111.feature\n@@ -0,0 +1,2 @@\n+Add display template for RelatedItemsWidget. No longer only render uuids.\n+[pbauer]\n\\ No newline at end of file\n'

Repository: plone.app.z3cform


Branch: refs/heads/master
Date: 2020-03-23T18:00:58+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.z3cform/commit/b01c263df80c07b801780b2a7e9f6576ff481dfb

only query once and sort later

Files changed:
M plone/app/z3cform/widget.py

b'diff --git a/plone/app/z3cform/widget.py b/plone/app/z3cform/widget.py\nindex 43753f9..6956502 100644\n--- a/plone/app/z3cform/widget.py\n+++ b/plone/app/z3cform/widget.py\n@@ -626,7 +626,6 @@ def items(self):\n         Query the catalog for the widget-value (uuids) to only display items\n         that the user is allowed to see. Accessing the value with e.g.\n         getattr(self.context, self.__name__) would yield the items unfiltered.\n-        To keep the order intact query each uuid individually.\n         Uses IContentListing for easy access to MimeTypeIcon and more.\n         """\n         results = []\n@@ -634,18 +633,19 @@ def items(self):\n             return results\n         separator = getattr(self, \'separator\', \';\')\n         uuids = self.value.split(separator)\n-        if not isinstance(uuids, (list, tuple, set)):\n-            uuids = [uuids]\n \n         try:\n             catalog = getToolByName(self.context, \'portal_catalog\')\n         except AttributeError:\n             catalog = getToolByName(getSite(), \'portal_catalog\')\n \n+        brains = catalog(UID=uuids)\n+        # restore original order\n+        brains = {i.UID: i for i in brains}\n         for uuid in uuids:\n-            brains = catalog(UID=uuid)\n-            if brains:\n-                results.append(brains[0])\n+            brain = brains.get(uuid, None)\n+            if brain:\n+                results.append(brain)\n         return IContentListing(results)\n \n \n'

Repository: plone.app.z3cform


Branch: refs/heads/master
Date: 2020-03-23T18:08:24+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.z3cform/commit/b1221a3dd97271a265dc62f4798a61c6298fff57

use list-comprehension

Files changed:
M plone/app/z3cform/widget.py

b'diff --git a/plone/app/z3cform/widget.py b/plone/app/z3cform/widget.py\nindex 6956502..52f3055 100644\n--- a/plone/app/z3cform/widget.py\n+++ b/plone/app/z3cform/widget.py\n@@ -642,11 +642,8 @@ def items(self):\n         brains = catalog(UID=uuids)\n         # restore original order\n         brains = {i.UID: i for i in brains}\n-        for uuid in uuids:\n-            brain = brains.get(uuid, None)\n-            if brain:\n-                results.append(brain)\n-        return IContentListing(results)\n+        brains = [brains[uuid] for uuid in uuids if brains.get(uuid)]\n+        return IContentListing(brains)\n \n \n @implementer_only(IQueryStringWidget)\n'

Repository: plone.app.z3cform


Branch: refs/heads/master
Date: 2020-03-23T18:54:28+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.z3cform/commit/05ab8d3982332c96f1ca2d290520d40599b23f29

sort with key function

Files changed:
M plone/app/z3cform/widget.py

b'diff --git a/plone/app/z3cform/widget.py b/plone/app/z3cform/widget.py\nindex 52f3055..18d1bdd 100644\n--- a/plone/app/z3cform/widget.py\n+++ b/plone/app/z3cform/widget.py\n@@ -641,9 +641,8 @@ def items(self):\n \n         brains = catalog(UID=uuids)\n         # restore original order\n-        brains = {i.UID: i for i in brains}\n-        brains = [brains[uuid] for uuid in uuids if brains.get(uuid)]\n-        return IContentListing(brains)\n+        results = sorted(brains, key=lambda brain: uuids.index(brain.UID))\n+        return IContentListing(results)\n \n \n @implementer_only(IQueryStringWidget)\n'

Repository: plone.app.z3cform


Branch: refs/heads/master
Date: 2020-03-24T09:17:04+01:00
Author: Alessandro Pisa (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.app.z3cform/commit/42c7579aedcacfd0b1fbdda2acc6e72e6a7407d9

Merge pull request #111 from plone/displaytemplate_for_relationfields

Add template to display related items

Files changed:
A news/111.feature
A plone/app/z3cform/templates/relateditems_display.pt
M plone/app/z3cform/configure.zcml
M plone/app/z3cform/widget.py

b'diff --git a/news/111.feature b/news/111.feature\nnew file mode 100644\nindex 0000000..da56c5f\n--- /dev/null\n+++ b/news/111.feature\n@@ -0,0 +1,2 @@\n+Add display template for RelatedItemsWidget. No longer only render uuids.\n+[pbauer]\n\\ No newline at end of file\ndiff --git a/plone/app/z3cform/configure.zcml b/plone/app/z3cform/configure.zcml\nindex 63d81da..7e2d547 100644\n--- a/plone/app/z3cform/configure.zcml\n+++ b/plone/app/z3cform/configure.zcml\n@@ -150,6 +150,13 @@\n       template="templates/link_input.pt"\n       />\n \n+  <z3c:widgetTemplate\n+      mode="display"\n+      widget=".interfaces.IRelatedItemsWidget"\n+      layer=".interfaces.IPloneFormLayer"\n+      template="templates/relateditems_display.pt"\n+      />\n+\n   <browser:page\n       name="z3cform_validate_field"\n       for="*"\ndiff --git a/plone/app/z3cform/templates/relateditems_display.pt b/plone/app/z3cform/templates/relateditems_display.pt\nnew file mode 100644\nindex 0000000..23ee643\n--- /dev/null\n+++ b/plone/app/z3cform/templates/relateditems_display.pt\n@@ -0,0 +1,41 @@\n+<span id="form-widgets-fieldname"\n+      class="relateditems-widget textline-field"\n+      i18n:domain="plone"\n+      tal:define="plone_view nocall:context/@@plone;\n+                  normalizeString python:plone_view.normalizeString;\n+                  items python: view.items();\n+                  "\n+      tal:condition="items"\n+      tal:attributes="id python:\'form-widgets-{}\'.format(view.__name__);\n+                      class python: \'relateditems-widget {}-field\'.format(normalizeString(view.field.__class__.__name__));\n+                      ">\n+    <div>\n+        <ul>\n+          <li tal:repeat="item items">\n+            <span tal:define="item_type           python:item.portal_type;\n+                              item_type_class     python:item.ContentTypeClass();\n+                              item_wf_state_class python:item.ReviewStateClass();\n+                              appendViewAction    python:item.appendViewAction();\n+                              item_url            python:item.getURL();\n+                              item_url            python:item_url+\'/view\' if appendViewAction else item_url;"\n+                  tal:attributes="title item_type">\n+\n+              <a tal:attributes="href item_url">\n+                <img class="mime-icon"\n+                     tal:condition="python:item_type ==\'File\'"\n+                     tal:attributes="src python:item.MimeTypeIcon();">\n+\n+                <span tal:attributes="class string:$item_type_class $item_wf_state_class url;"\n+                      tal:content="python:item.Title()">\n+                    Title\n+                </span>\n+                <span class="discreet"\n+                      tal:content="python:item.Description()">\n+                    Description\n+                </span>\n+              </a>\n+            </span>\n+          </li>\n+        </ul>\n+    </div>\n+</span>\ndiff --git a/plone/app/z3cform/widget.py b/plone/app/z3cform/widget.py\nindex 7d9fd48..18d1bdd 100644\n--- a/plone/app/z3cform/widget.py\n+++ b/plone/app/z3cform/widget.py\n@@ -3,6 +3,7 @@\n from Acquisition import ImplicitAcquisitionWrapper\n from lxml import etree\n from OFS.interfaces import ISimpleItem\n+from plone.app.contentlisting.interfaces import IContentListing\n from plone.app.event.base import first_weekday\n from plone.app.textfield.value import RichTextValue\n from plone.app.textfield.widget import RichTextWidget as patext_RichTextWidget\n@@ -619,6 +620,30 @@ def _base_args(self):\n \n         return args\n \n+    def items(self):\n+        """Return item for the widget values for the display template\n+\n+        Query the catalog for the widget-value (uuids) to only display items\n+        that the user is allowed to see. Accessing the value with e.g.\n+        getattr(self.context, self.__name__) would yield the items unfiltered.\n+        Uses IContentListing for easy access to MimeTypeIcon and more.\n+        """\n+        results = []\n+        if not self.value:\n+            return results\n+        separator = getattr(self, \'separator\', \';\')\n+        uuids = self.value.split(separator)\n+\n+        try:\n+            catalog = getToolByName(self.context, \'portal_catalog\')\n+        except AttributeError:\n+            catalog = getToolByName(getSite(), \'portal_catalog\')\n+\n+        brains = catalog(UID=uuids)\n+        # restore original order\n+        results = sorted(brains, key=lambda brain: uuids.index(brain.UID))\n+        return IContentListing(results)\n+\n \n @implementer_only(IQueryStringWidget)\n class QueryStringWidget(BaseWidget, z3cform_TextWidget):\n'

