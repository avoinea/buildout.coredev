Repository: plone.restapi


Branch: refs/heads/master
Date: 2020-02-12T10:10:59+01:00
Author: Victor Fernandez de Alba (sneridagh) <sneridagh@gmail.com>
Commit: https://github.com/plone/plone.restapi/commit/6f2f76ad4a9631b46ab70a7def8ea470505a8072

Return proper None instead of string `None` on the choice schema serializer

Files changed:
A news/863.bugfix
M src/plone/restapi/tests/test_types.py
M src/plone/restapi/types/adapters.py

b'diff --git a/news/863.bugfix b/news/863.bugfix\nnew file mode 100644\nindex 00000000..b8e7a631\n--- /dev/null\n+++ b/news/863.bugfix\n@@ -0,0 +1,2 @@\n+- Return proper None instead of string "None" on the choice schema serializer\n+  [sneridagh]\ndiff --git a/src/plone/restapi/tests/test_types.py b/src/plone/restapi/tests/test_types.py\nindex 5f2cc5e2..584c2f95 100644\n--- a/src/plone/restapi/tests/test_types.py\n+++ b/src/plone/restapi/tests/test_types.py\n@@ -379,6 +379,31 @@ def test_choice(self):\n             adapter.get_schema(),\n         )\n \n+    def test_choice_inline_array(self):\n+        field = schema.Choice(\n+            __name__="myfield",\n+            title=u"My field",\n+            description=u"My great field",\n+            values=["foo", "bar"],\n+        )\n+\n+        adapter = getMultiAdapter(\n+            (field, self.portal, self.request), IJsonSchemaProvider\n+        )\n+\n+        self.assertEqual(\n+            {\n+                "type": "string",\n+                "title": u"My field",\n+                "description": u"My great field",\n+                "enum": ["foo", "bar"],\n+                "enumNames": [None, None],\n+                "choices": [("foo", None), ("bar", None)],\n+                "vocabulary": {"@id": "http://nohost/plone/@sources/myfield"},\n+            },\n+            adapter.get_schema(),\n+        )\n+\n     def test_choice_named_vocab(self):\n         field = schema.Choice(\n             title=u"My field",\ndiff --git a/src/plone/restapi/types/adapters.py b/src/plone/restapi/types/adapters.py\nindex 09612e06..ef162d71 100644\n--- a/src/plone/restapi/types/adapters.py\n+++ b/src/plone/restapi/types/adapters.py\n@@ -294,7 +294,10 @@ def additional(self):\n             enum_names = []\n \n             for term in vocabulary:\n-                title = translate(term.title, context=self.request)\n+                if term.title:\n+                    title = translate(term.title, context=self.request)\n+                else:\n+                    title = None\n                 choices.append((term.token, title))\n                 enum.append(term.token)\n                 enum_names.append(title)\n'

Repository: plone.restapi


Branch: refs/heads/master
Date: 2020-02-19T12:08:56+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.restapi/commit/ad8274d16355a40e8f2780d828bb5279b5fa4841

Merge pull request #864 from plone/fixstringNoneastitleininlinevocabs

Return proper None instead of string `None` on the choice schema seriâ€¦

Files changed:
A news/863.bugfix
M src/plone/restapi/tests/test_types.py
M src/plone/restapi/types/adapters.py

b'diff --git a/news/863.bugfix b/news/863.bugfix\nnew file mode 100644\nindex 00000000..b8e7a631\n--- /dev/null\n+++ b/news/863.bugfix\n@@ -0,0 +1,2 @@\n+- Return proper None instead of string "None" on the choice schema serializer\n+  [sneridagh]\ndiff --git a/src/plone/restapi/tests/test_types.py b/src/plone/restapi/tests/test_types.py\nindex 5f2cc5e2..584c2f95 100644\n--- a/src/plone/restapi/tests/test_types.py\n+++ b/src/plone/restapi/tests/test_types.py\n@@ -379,6 +379,31 @@ def test_choice(self):\n             adapter.get_schema(),\n         )\n \n+    def test_choice_inline_array(self):\n+        field = schema.Choice(\n+            __name__="myfield",\n+            title=u"My field",\n+            description=u"My great field",\n+            values=["foo", "bar"],\n+        )\n+\n+        adapter = getMultiAdapter(\n+            (field, self.portal, self.request), IJsonSchemaProvider\n+        )\n+\n+        self.assertEqual(\n+            {\n+                "type": "string",\n+                "title": u"My field",\n+                "description": u"My great field",\n+                "enum": ["foo", "bar"],\n+                "enumNames": [None, None],\n+                "choices": [("foo", None), ("bar", None)],\n+                "vocabulary": {"@id": "http://nohost/plone/@sources/myfield"},\n+            },\n+            adapter.get_schema(),\n+        )\n+\n     def test_choice_named_vocab(self):\n         field = schema.Choice(\n             title=u"My field",\ndiff --git a/src/plone/restapi/types/adapters.py b/src/plone/restapi/types/adapters.py\nindex 09612e06..ef162d71 100644\n--- a/src/plone/restapi/types/adapters.py\n+++ b/src/plone/restapi/types/adapters.py\n@@ -294,7 +294,10 @@ def additional(self):\n             enum_names = []\n \n             for term in vocabulary:\n-                title = translate(term.title, context=self.request)\n+                if term.title:\n+                    title = translate(term.title, context=self.request)\n+                else:\n+                    title = None\n                 choices.append((term.token, title))\n                 enum.append(term.token)\n                 enum_names.append(title)\n'

