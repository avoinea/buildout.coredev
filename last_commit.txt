Repository: plone.app.z3cform


Branch: refs/heads/master
Date: 2020-03-24T09:22:57+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.z3cform/commit/9395c42a3dd54a663a9cb7be1be4e4773461bc19

add test

Files changed:
M plone/app/z3cform/tests/test_widgets.py

b'diff --git a/plone/app/z3cform/tests/test_widgets.py b/plone/app/z3cform/tests/test_widgets.py\nindex 08f76b2..8591543 100644\n--- a/plone/app/z3cform/tests/test_widgets.py\n+++ b/plone/app/z3cform/tests/test_widgets.py\n@@ -4,12 +4,14 @@\n from json import loads\n from lxml import html\n from mock import Mock\n+from plone.app.contentlisting.contentlisting import ContentListing\n from plone.app.testing import setRoles\n from plone.app.testing import TEST_USER_ID\n from plone.app.widgets.utils import NotImplemented as PatternNotImplemented\n from plone.app.z3cform.tests.layer import PAZ3CForm_INTEGRATION_TESTING\n from plone.app.z3cform.widget import BaseWidget\n from plone.app.z3cform.widget import DateWidget\n+from plone.app.z3cform.widget import RelatedItemsWidget\n from plone.autoform.directives import widget\n from plone.autoform.form import AutoExtensibleForm\n from plone.dexterity.fti import DexterityFTI\n@@ -22,6 +24,10 @@\n from z3c.form.form import Form\n from z3c.form.interfaces import IFormLayer\n from z3c.form.widget import FieldWidget\n+from z3c.relationfield.relation import RelationValue\n+from z3c.relationfield.schema import RelationChoice\n+from z3c.relationfield.schema import RelationList\n+from zope.component import getMultiAdapter\n from zope.component import getUtility\n from zope.component import provideUtility\n from zope.component.globalregistry import base\n@@ -29,6 +35,8 @@\n from zope.interface import alsoProvides\n from zope.interface import Interface\n from zope.interface import provider\n+from zope.intid.interfaces import IIntIds\n+from zope.pagetemplate.interfaces import IPageTemplate\n from zope.publisher.browser import TestRequest\n from zope.schema import BytesLine\n from zope.schema import Choice\n@@ -1229,6 +1237,80 @@ def test_related_items_widget_nav_root(self):\n         )\n \n \n+class IRelationsType(Interface):\n+    single = RelationChoice(title=u\'Single\',\n+                            required=False, values=[])\n+    multiple = RelationList(title=u\'Multiple (Relations field)\',\n+                            required=False)\n+\n+\n+class RelatedItemsWidgetTemplateIntegrationTests(unittest.TestCase):\n+\n+    layer = PAZ3CForm_INTEGRATION_TESTING\n+\n+    def setUp(self):\n+        self.portal = self.layer[\'portal\']\n+        self.request = self.layer[\'request\']\n+        setRoles(self.portal, TEST_USER_ID, [\'Manager\'])\n+\n+    def test_related_items_widget_display_template(self):\n+        rel_fti = DexterityFTI(\n+            \'RelationsType\',\n+            schema=IRelationsType.__identifier__\n+        )\n+        self.portal.portal_types._setObject(\'RelationsType\', rel_fti)\n+\n+        intids = getUtility(IIntIds)\n+\n+        self.portal.invokeFactory(\'RelationsType\', \'source\', title=u\'A Source\')\n+        self.portal.invokeFactory(\'RelationsType\', \'target\', title=u\'A Target\')\n+        self.portal.invokeFactory(\'Document\', \'doc\', title=u\'A Document\')\n+        source = self.portal[\'source\']\n+        target = self.portal[\'target\']\n+        doc = self.portal[\'doc\']\n+\n+        # Add some relations\n+        source.single = RelationValue(intids.getId(target))\n+        source.multiple = [RelationValue(intids.getId(target)), RelationValue(intids.getId(doc))]\n+\n+        # Update relations\n+        from zope.lifecycleevent import ObjectModifiedEvent\n+        from zope.event import notify\n+        notify(ObjectModifiedEvent(source))\n+        default_view = source.restrictedTraverse(\'@@view\')\n+        default_view.update()\n+\n+        single = default_view.w[\'single\']\n+        self.assertIsInstance(single, RelatedItemsWidget)\n+        self.assertTrue(single.value, target.UID())\n+        items = single.items()\n+        self.assertIsInstance(items, ContentListing)\n+        self.assertTrue(items[0].UID, target.UID())\n+\n+        template = getMultiAdapter(\n+            (source, self.request, single.form, single.field, single),\n+            IPageTemplate, name=single.mode)\n+        self.assertTrue(template.filename.endswith(\'relateditems_display.pt\'))\n+        html = template(single)\n+        self.assertIn(\'<span class="contenttype-relationstype state-missing-value url">A Target</span>\', html)\n+\n+        multiple = default_view.w[\'multiple\']\n+        self.assertIsInstance(multiple, RelatedItemsWidget)\n+        self.assertTrue(multiple.value, \';\'.join([target.UID(), doc.UID()]))\n+        items = multiple.items()\n+        self.assertIsInstance(items, ContentListing)\n+        self.assertTrue(items[0].UID, target.UID())\n+        self.assertTrue(items[1].UID, doc.UID())\n+\n+        template = getMultiAdapter(\n+            (source, self.request, multiple.form, multiple.field, multiple),\n+            IPageTemplate, name=multiple.mode)\n+        self.assertTrue(template.filename.endswith(\'relateditems_display.pt\'))\n+        html = template(multiple)\n+        self.assertIn(\'<span class="contenttype-relationstype state-missing-value url">A Target</span>\', html)\n+        self.assertIn(\'<span class="contenttype-document state-missing-value url">A Document</span>\', html)\n+\n+\n class RelatedItemsWidgetTests(unittest.TestCase):\n \n     def setUp(self):\n'

Repository: plone.app.z3cform


Branch: refs/heads/master
Date: 2020-03-24T13:05:22+01:00
Author: Philip Bauer (pbauer) <bauer@starzel.de>
Commit: https://github.com/plone/plone.app.z3cform/commit/23a6da77ce82fd7c27feb2455cab102fe6f8f070

Merge pull request #112 from plone/displaytemplate_for_relationfields

add test for new displaytemplate for relationfields

Files changed:
M plone/app/z3cform/tests/test_widgets.py

b'diff --git a/plone/app/z3cform/tests/test_widgets.py b/plone/app/z3cform/tests/test_widgets.py\nindex 08f76b2..8591543 100644\n--- a/plone/app/z3cform/tests/test_widgets.py\n+++ b/plone/app/z3cform/tests/test_widgets.py\n@@ -4,12 +4,14 @@\n from json import loads\n from lxml import html\n from mock import Mock\n+from plone.app.contentlisting.contentlisting import ContentListing\n from plone.app.testing import setRoles\n from plone.app.testing import TEST_USER_ID\n from plone.app.widgets.utils import NotImplemented as PatternNotImplemented\n from plone.app.z3cform.tests.layer import PAZ3CForm_INTEGRATION_TESTING\n from plone.app.z3cform.widget import BaseWidget\n from plone.app.z3cform.widget import DateWidget\n+from plone.app.z3cform.widget import RelatedItemsWidget\n from plone.autoform.directives import widget\n from plone.autoform.form import AutoExtensibleForm\n from plone.dexterity.fti import DexterityFTI\n@@ -22,6 +24,10 @@\n from z3c.form.form import Form\n from z3c.form.interfaces import IFormLayer\n from z3c.form.widget import FieldWidget\n+from z3c.relationfield.relation import RelationValue\n+from z3c.relationfield.schema import RelationChoice\n+from z3c.relationfield.schema import RelationList\n+from zope.component import getMultiAdapter\n from zope.component import getUtility\n from zope.component import provideUtility\n from zope.component.globalregistry import base\n@@ -29,6 +35,8 @@\n from zope.interface import alsoProvides\n from zope.interface import Interface\n from zope.interface import provider\n+from zope.intid.interfaces import IIntIds\n+from zope.pagetemplate.interfaces import IPageTemplate\n from zope.publisher.browser import TestRequest\n from zope.schema import BytesLine\n from zope.schema import Choice\n@@ -1229,6 +1237,80 @@ def test_related_items_widget_nav_root(self):\n         )\n \n \n+class IRelationsType(Interface):\n+    single = RelationChoice(title=u\'Single\',\n+                            required=False, values=[])\n+    multiple = RelationList(title=u\'Multiple (Relations field)\',\n+                            required=False)\n+\n+\n+class RelatedItemsWidgetTemplateIntegrationTests(unittest.TestCase):\n+\n+    layer = PAZ3CForm_INTEGRATION_TESTING\n+\n+    def setUp(self):\n+        self.portal = self.layer[\'portal\']\n+        self.request = self.layer[\'request\']\n+        setRoles(self.portal, TEST_USER_ID, [\'Manager\'])\n+\n+    def test_related_items_widget_display_template(self):\n+        rel_fti = DexterityFTI(\n+            \'RelationsType\',\n+            schema=IRelationsType.__identifier__\n+        )\n+        self.portal.portal_types._setObject(\'RelationsType\', rel_fti)\n+\n+        intids = getUtility(IIntIds)\n+\n+        self.portal.invokeFactory(\'RelationsType\', \'source\', title=u\'A Source\')\n+        self.portal.invokeFactory(\'RelationsType\', \'target\', title=u\'A Target\')\n+        self.portal.invokeFactory(\'Document\', \'doc\', title=u\'A Document\')\n+        source = self.portal[\'source\']\n+        target = self.portal[\'target\']\n+        doc = self.portal[\'doc\']\n+\n+        # Add some relations\n+        source.single = RelationValue(intids.getId(target))\n+        source.multiple = [RelationValue(intids.getId(target)), RelationValue(intids.getId(doc))]\n+\n+        # Update relations\n+        from zope.lifecycleevent import ObjectModifiedEvent\n+        from zope.event import notify\n+        notify(ObjectModifiedEvent(source))\n+        default_view = source.restrictedTraverse(\'@@view\')\n+        default_view.update()\n+\n+        single = default_view.w[\'single\']\n+        self.assertIsInstance(single, RelatedItemsWidget)\n+        self.assertTrue(single.value, target.UID())\n+        items = single.items()\n+        self.assertIsInstance(items, ContentListing)\n+        self.assertTrue(items[0].UID, target.UID())\n+\n+        template = getMultiAdapter(\n+            (source, self.request, single.form, single.field, single),\n+            IPageTemplate, name=single.mode)\n+        self.assertTrue(template.filename.endswith(\'relateditems_display.pt\'))\n+        html = template(single)\n+        self.assertIn(\'<span class="contenttype-relationstype state-missing-value url">A Target</span>\', html)\n+\n+        multiple = default_view.w[\'multiple\']\n+        self.assertIsInstance(multiple, RelatedItemsWidget)\n+        self.assertTrue(multiple.value, \';\'.join([target.UID(), doc.UID()]))\n+        items = multiple.items()\n+        self.assertIsInstance(items, ContentListing)\n+        self.assertTrue(items[0].UID, target.UID())\n+        self.assertTrue(items[1].UID, doc.UID())\n+\n+        template = getMultiAdapter(\n+            (source, self.request, multiple.form, multiple.field, multiple),\n+            IPageTemplate, name=multiple.mode)\n+        self.assertTrue(template.filename.endswith(\'relateditems_display.pt\'))\n+        html = template(multiple)\n+        self.assertIn(\'<span class="contenttype-relationstype state-missing-value url">A Target</span>\', html)\n+        self.assertIn(\'<span class="contenttype-document state-missing-value url">A Document</span>\', html)\n+\n+\n class RelatedItemsWidgetTests(unittest.TestCase):\n \n     def setUp(self):\n'

