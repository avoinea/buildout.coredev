Repository: plone.schema


Branch: refs/heads/master
Date: 2020-04-02T18:26:23+02:00
Author: Alin Voinea (avoinea) <contact@avoinea.com>
Commit: https://github.com/plone/plone.schema/commit/1669a65ef44f3fea636bdde2589e09e1d61e232b

Refs #7 - Fix JSONField with default values saved to  XML (#8)

Refs #7 - Fix JSONField with default values saved to  XML

Files changed:
A news/7.bugfix
A plone/schema/tests/__init__.py
A plone/schema/tests/test_doctests.py
M plone/schema/jsonfield.py
M setup.py

b'diff --git a/news/7.bugfix b/news/7.bugfix\nnew file mode 100644\nindex 0000000..6cf4897\n--- /dev/null\n+++ b/news/7.bugfix\n@@ -0,0 +1,2 @@\n+Fix JSONField with default values saved to `model_source` XML\n+[avoinea]\ndiff --git a/plone/schema/jsonfield.py b/plone/schema/jsonfield.py\nindex bd960c7..d07b7b8 100644\n--- a/plone/schema/jsonfield.py\n+++ b/plone/schema/jsonfield.py\n@@ -1,3 +1,6 @@\n+import ast\n+import json\n+import jsonschema\n from plone.schema import _\n from zope.interface import Attribute\n from zope.interface import implementer\n@@ -7,8 +10,11 @@\n from zope.schema.interfaces import WrongContainedType\n from zope.schema.interfaces import IFromUnicode\n \n-import json\n-import jsonschema\n+try:\n+    from json import JSONDecodeError\n+except ImportError:\n+    # Python 2\n+    JSONDecodeError = ValueError\n \n \n DEFAULT_JSON_SCHEMA = json.dumps({\n@@ -48,6 +54,23 @@ def _validate(self, value):\n             raise WrongContainedType(e.message, self.__name__)\n \n     def fromUnicode(self, value):\n-        v = json.loads(value)\n+        """ Get value from unicode.\n+\n+        Value can be a valid JSON object:\n+\n+            >>> JSONField().fromUnicode(\'{"items": []}\')\n+            {\'items\': []}\n+\n+        or it can be a Pyhon dict stored as string:\n+\n+            >>> JSONField().fromUnicode("{\'items\': []}")\n+            {\'items\': []}\n+\n+        """\n+        try:\n+            v = json.loads(value)\n+        except JSONDecodeError:\n+            v = ast.literal_eval(value)\n+\n         self.validate(v)\n         return v\ndiff --git a/plone/schema/tests/__init__.py b/plone/schema/tests/__init__.py\nnew file mode 100644\nindex 0000000..bf3dd71\n--- /dev/null\n+++ b/plone/schema/tests/__init__.py\n@@ -0,0 +1,2 @@\n+""" Tests\n+"""\ndiff --git a/plone/schema/tests/test_doctests.py b/plone/schema/tests/test_doctests.py\nnew file mode 100644\nindex 0000000..9e4dbb2\n--- /dev/null\n+++ b/plone/schema/tests/test_doctests.py\n@@ -0,0 +1,23 @@\n+""" Tests\n+"""\n+import re\n+import six\n+import unittest\n+import doctest\n+\n+class Py23DocChecker(doctest.OutputChecker):\n+    def check_output(self, want, got, optionflags):\n+        if six.PY2:\n+            got = re.sub("u\'(.*?)\'", "\'\\\\1\'", want)\n+            got = re.sub(\' encoding="utf-8"\', \'\', want)\n+            # want = re.sub("b\'(.*?)\'", "\'\\\\1\'", want)\n+        return doctest.OutputChecker.check_output(self, want, got, optionflags)\n+\n+\n+def test_suite():\n+    return unittest.TestSuite((\n+        doctest.DocTestSuite(\n+            \'plone.schema.jsonfield\',\n+            checker=Py23DocChecker()\n+        ),\n+    ))\ndiff --git a/setup.py b/setup.py\nindex bc99234..9d087f1 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -46,7 +46,8 @@\n         \'zope.interface\',\n         \'zope.schema\',\n     ],\n-    extras_require={\n-        \'test\': [\'plone.app.testing\'],\n-    },\n+    extras_require={\'test\': [\n+        \'six\',\n+        \'plone.app.testing\'\n+    ]},\n )\n'

