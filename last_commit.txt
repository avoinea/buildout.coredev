Repository: plone.api


Branch: refs/heads/master
Date: 2020-02-18T16:41:42+01:00
Author: ale-rt (ale-rt) <alessandro.pisa@gmail.com>
Commit: https://github.com/plone/plone.api/commit/c70a800bda84d8369388d51ffc0ea9635ed93940

Remove deprecation warnings

Fixes #432

Files changed:
A news/432.bugfix
M src/plone/api/validation.py

b'diff --git a/news/432.bugfix b/news/432.bugfix\nnew file mode 100644\nindex 0000000..865a87f\n--- /dev/null\n+++ b/news/432.bugfix\n@@ -0,0 +1 @@\n+Remove deprecation warnings [ale-rt]\ndiff --git a/src/plone/api/validation.py b/src/plone/api/validation.py\nindex afa9a91..2d5e164 100644\n--- a/src/plone/api/validation.py\n+++ b/src/plone/api/validation.py\n@@ -12,7 +12,11 @@ def _get_arg_spec(func, validator_args):\n     """Get the arguments specified in the function spec\n     and check that the decorator doesn\'t refer to non-existant args.\n     """\n-    signature_args, _, _, _ = inspect.getargspec(func)\n+    try:\n+        signature_args = inspect.getfullargspec(func).args\n+    except AttributeError:\n+        # Python 2.7 compatibility\n+        signature_args = inspect.getargspec(func).args\n \n     extra_args = set(validator_args) - set(signature_args)\n     if extra_args:\n'

Repository: plone.api


Branch: refs/heads/master
Date: 2020-02-19T12:04:12+01:00
Author: Jens W. Klein (jensens) <jk@kleinundpartner.at>
Commit: https://github.com/plone/plone.api/commit/6097758f05ccdb1637f26550b2831da58ee21e12

Merge pull request #438 from plone/432-bugfix

Remove deprecation warnings

Files changed:
A news/432.bugfix
M src/plone/api/validation.py

b'diff --git a/news/432.bugfix b/news/432.bugfix\nnew file mode 100644\nindex 0000000..865a87f\n--- /dev/null\n+++ b/news/432.bugfix\n@@ -0,0 +1 @@\n+Remove deprecation warnings [ale-rt]\ndiff --git a/src/plone/api/validation.py b/src/plone/api/validation.py\nindex afa9a91..2d5e164 100644\n--- a/src/plone/api/validation.py\n+++ b/src/plone/api/validation.py\n@@ -12,7 +12,11 @@ def _get_arg_spec(func, validator_args):\n     """Get the arguments specified in the function spec\n     and check that the decorator doesn\'t refer to non-existant args.\n     """\n-    signature_args, _, _, _ = inspect.getargspec(func)\n+    try:\n+        signature_args = inspect.getfullargspec(func).args\n+    except AttributeError:\n+        # Python 2.7 compatibility\n+        signature_args = inspect.getargspec(func).args\n \n     extra_args = set(validator_args) - set(signature_args)\n     if extra_args:\n'

